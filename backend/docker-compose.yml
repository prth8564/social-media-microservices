
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  auth-db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root123
      POSTGRES_DB: auth
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  auth-service:
    container_name: auth-service
    build:
      context: ./auth
    depends_on:
      - kafka
      - auth-db
    environment:
      KAFKA_BROKERS: kafka:9092
      DB_HOST: auth-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: root123
      DB_NAME: auth
    ports:
      - "4000:3000"
    develop:
      watch:
        - action: rebuild
          path: ./auth
  
  profile-db:
    image: postgres:15
    container_name: profile-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root123
      POSTGRES_DB: profiles
    volumes:
      - profile_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Change based on your service port

  profile-service:
    container_name: profile-service
    build:
      context: ./profile
    depends_on:
      - kafka
      - profile-db
    environment:
      KAFKA_BROKERS: kafka:9092
      DB_HOST: profile-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: root123
      DB_NAME: profiles
    ports:
      - "4001:4001" # Change based on your service port
volumes:
  auth_pgdata:
  profile_pgdata: